//Γενικά
Και οι τρείς αλγόριθμοι τρέχουν χρησιμοποιώντας ως είσοδο 
πρώτο το αρχείο εισόδων και στην συνέχεια δεύτερο όρισμα 
την έξοδο. 

//Αλγόριθμοι
Για τους GraphPartition(gp) και TriangleTypePartition(ttp) 
δίνουμε και τρίτο όρισμα τον αριθμό των partition.
(Σημείωση: μέχρι 22 partition για τον gp καθώς χρησιμοποιείται
για τον υπολογισμό παραγοντικού και οι τιμές ξεπερνούν το όριο 
του long στη Java, θεωρήσαμε οτι δε χρειάζεται να χρησιμοποιήσουμε
άλλες αναπαραστάσεις αριθμών εκτός των built-in).

//Παράδειγμα εκτέλεσης:
"hadoop jar ~/ttp.jar /user/moses/test/0.edges /user/moses/outputTTP 20"
θα τρέξει τον TriangleTypePartition αλγόριθμο, με το 0.edges αρχείο ως έισοδο
και έξοδο το μονοπατι "/user/moses/outputTTP" για 20 partition.


//Συγκεκριμένα
Για την εκτέλεση σε πολλαπλούς reducers προσθέταμε στην εντολή το πλήθος
των reducer, π.χ. προηγούμενη_εντολή + "\ -D mapred.reduce.tasks = 3"

Για τα dataset, χρησιμοποιήσαμε τα έτοιμα dataset 
απο το https://snap.stanford.edu/data/index.html, όπου περιείχε διάφορα dataset 
με έτοιμους γράφους απο κόμβους. Απο αυτά, χρησιμοποιήσαμε 
το https://snap.stanford.edu/data/egonets-Facebook.html
καθώς περιείχε αρκετά μικρότερα dataset κλιμακούμενου μεγέθους.

Μαζί με τους αλγορίθμους περιλαμβάνουμε και ένα μικρό σετ στατιστικών απο διαφορετικές
εκτελέσεις των αλγορίθμων για 4 διαφοτερικά μεγέθη partition (5, 10, 15 και 20) για 3
διαφορετικά dataset, κλιμακούμενου μεγέθους. Όλα τα αποτελέσματα συγκρίνονται με το χρόνο
εκφρασμένο σε nanoseconds.

Τέλος, όσων αφορά τα ίδια τα δεδομένα, πρέπει να είναι σε μορφή "κόμβοςΑ κόμβοςΒ"
το οποίο αναπαριστά μια ακμή. Είναι όμως απαραίτητο να βρίσκεται και το αντίστροφο
παράδειγμα στο dataset, δηλαδή "κόμβοςΒ κόμβοςΑ". Οι κόμβοι πρέπει να είναι ακέραιοι αριθμοί.
